version: "3.8"
services:
  postgres-auth:
    image: postgres:15
    container_name: postgres-auth
    restart: always
    environment:
      POSTGRES_DB: authdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - auth-db-data:/var/lib/postgresql/data

  postgres-product:
    image: postgres:15
    container_name: postgres-product
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: productdb
    ports:
      - "5433:5432"
    volumes:
      - product-db-data:/var/lib/postgresql/data

  postgres-order:
    image: postgres:15
    container_name: postgres-order
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: orderdb
    ports:
      - "5434:5432"
    volumes:
      - order-db-data:/var/lib/postgresql/data

  postgres-cart:
    image: postgres:15
    container_name: postgres-cart
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: cartdb
    ports:
      - "5435:5432"
    volumes:
      - cart-db-data:/var/lib/postgresql/data

  postgres-payment:
    image: postgres:15
    container_name: postgres-payment
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: paymentdb
    ports:
      - "5436:5432"
    volumes:
      - payment-db-data:/var/lib/postgresql/data

  postgres-inventory:
    image: postgres:15
    container_name: postgres-inventory
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: inventorydb
    ports:
      - "5437:5432"
    volumes:
      - inventory-db-data:/var/lib/postgresql/data

  auth-service:
    build:
      context: .
      dockerfile: auth-service/Dockerfile
    ports:
      - "8081:8080"
    depends_on:
      - postgres-auth
    # environment:
    #   SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-auth:5432/authdb

  product-service:
    build:
      context: .
      dockerfile: product-service/Dockerfile
    ports:
      - "8082:8080"
    depends_on:
      - postgres-product
    # environment:
    #   SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-product:5432/productdb

  order-service:
    build:
      context: .
      dockerfile: order-service/Dockerfile
    ports:
      - "8083:8080"
    depends_on:
      - postgres-order
    # environment:
    #   SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-order:5432/orderdb

  cart-service:
    build:
      context: .
      dockerfile: cart-service/Dockerfile
    ports:
      - "8084:8080"
    depends_on:
      - postgres-cart
    # environment:
    #   SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-cart:5432/cartdb
  
  payment-service:
    build:
      context: .
      dockerfile: payment-service/Dockerfile
    ports:
      - "8085:8080"
    depends_on:
      - postgres-payment
    # environment:
    #   SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-payment:5432/paymentdb

  inventory-service:
    build:
      context: .
      dockerfile: inventory-service/Dockerfile
    ports:
      - "8086:8080"
    depends_on:
      - postgres-inventory
    # environment:
    #   SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-inventory:5432/inventorydb

volumes:
  auth-db-data:
  product-db-data:
  order-db-data:
  cart-db-data:
  payment-db-data:
  inventory-db-data:
