version: "3.8"
services:
  postgres-auth:
    image: postgres:15
    container_name: postgres-auth
    restart: always
    environment:
      POSTGRES_DB: authdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - auth-db-data:/var/lib/postgresql/data

  postgres-product:
    image: postgres:15
    container_name: postgres-product
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: productdb
    ports:
      - "5433:5432"
    volumes:
      - product-db-data:/var/lib/postgresql/data

  postgres-order:
    image: postgres:15
    container_name: postgres-order
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: orderdb
    ports:
      - "5434:5432"
    volumes:
      - order-db-data:/var/lib/postgresql/data

  auth-service:
    build:
      context: .
      dockerfile: auth-service/Dockerfile
    ports:
      - "8081:8080"
    depends_on:
      - postgres-auth
    # environment:
    #   SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-auth:5432/authdb

  product-service:
    build:
      context: .
      dockerfile: product-service/Dockerfile
    ports:
      - "8082:8080"
    depends_on:
      - postgres-product
    # environment:
    #   SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-product:5432/productdb

  order-service:
    build:
      context: .
      dockerfile: order-service/Dockerfile
    ports:
      - "8083:8080"
    depends_on:
      - postgres-order
    # environment:
    #   SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-order:5432/orderdb

volumes:
  auth-db-data:
  product-db-data:
  order-db-data:
